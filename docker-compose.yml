version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: coffee-shop-db
    environment:
      POSTGRES_DB: coffee
      POSTGRES_USER: coffee
      POSTGRES_PASSWORD: coffee
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coffee"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - coffee-shop-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: coffee-shop-app
    environment:
      DATABASE_URL: jdbc:postgresql://postgres:5432/coffee
      DATABASE_USERNAME: coffee
      DATABASE_PASSWORD: coffee
      JWT_SECRET: your-production-secret-key-change-this-to-a-long-random-string-in-production
      DB_POOL_SIZE: 32
      SPRING_PROFILES_ACTIVE: prod
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - coffee-shop-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: coffee-shop-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - coffee-shop-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: coffee-shop-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - coffee-shop-network
    restart: unless-stopped

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  coffee-shop-network:
    driver: bridge



